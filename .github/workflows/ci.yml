name: "CI"
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  release:
    types: [ published ]

defaults:
  run:
    shell: bash
    working-directory: ./

jobs:
  Changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      infinadd: ${{ steps.filter.outputs.infinadd }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          repository: Arthi-chaud/haskell-infinadd
          ref: main
          token: ${{ secrets.PAT }}
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            infinadd:
              - '**/*.hs'
              - '**/.c'
              - '.github/workflows/ci.yml'
  Build:
    needs: changes
    if: ${{ needs.changes.outputs.infinadd == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache
      - name: Build
        run: stack build
  Format:
    if: ${{ needs.changes.outputs.infinadd == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache
      - uses: haskell-actions/run-fourmolu@v9
        with:
          version: "0.14.0.0"
          pattern: |
            ./src/**/*.hs
            ./app/*.hs
            ./test/**/*.hs
          follow-symbolic-links: false
  Lint:
    if: ${{ needs.changes.outputs.infinadd == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache
      - name: 'Set up HLint'
        uses: rwe/actions-hlint-setup@v1
        with:
          version: '3.5'
      - name: 'Run HLint'
        uses: rwe/actions-hlint-run@v2
        with:
          path: '["./app/", "./src/", "./test/"]'
          fail-on: warning
  Tests:
    runs-on: ubuntu-latest
    needs: [ Build ]
    if: ${{ needs.changes.outputs.infinadd == 'true' && always() }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache
      - name: Install Coverage utility
        run: stack install hpc-codecov
      - name: Run tests
        run: stack test --coverage
      - name: Process Coverage report
        run: hpc-codecov stack:all -o codecov.json
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./codecov.json
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
